@model List<Khuluma_Server.Models.ViewModels.ChatMessageViewModel>
@{
    ViewBag.Title = "Group Chat: " + ViewBag.GroupName;
}


<div class="row">
  <div class="col-sm-12">


    <table class="table table-striped">
        <thead>
            <tr>
                <th>Date</th>
                <th>Time</th>
                <th>User</th>
                <th>Message</th>


            </tr>
        </thead>
        <tbody id="discussion">

            @foreach (var item in Model)
            {

                <tr>
                    <td>@item.Date</td>
                    <td>@item.Time</td>
                    <td>@item.Name</td>
                    <td>@item.Message</td>

                </tr>

            }

           
        </tbody>
        </table>
    </div>
</div>

    


<div class="container">
    <input type="text" id="message" />
    <input type="button" id="sendmessage" value="Send" />
    <input type="hidden" id="displayname" />
    

</div>
@section scripts {
    <!--Script references. -->
    <!--The jQuery library is required and is referenced by default in _Layout.cshtml. -->
    <!--Reference the SignalR library. -->
    <script src="~/Scripts/jquery.signalR-2.2.1.min.js"></script>
    <!--Reference the autogenerated SignalR hub script. -->
    <script src="~/signalr/hubs"></script>
    <!--SignalR script to update the chat page and send messages.-->
    <script>
        $(function () {
            // Reference the auto-generated proxy for the hub.
            var chat = $.connection.chatHub;

            var thisgroupName = "@ViewBag.GroupName";
            var thisgroupID = "@ViewBag.GroupId";
            var userid = 0;
            var groupid = 0;
            var userid = 0;
            var time = [];
            // Create a function that the hub can call back to display messages.
            chat.client.addNewMessageToPage = function (name, message, timestamp, idVals) {
                // Add the message to the page.
                time = timestamp.split("T");
                time = time[1].split(".");
                groupid = idVals[0];
                userid = idVals[1];
                
                if (groupid == thisgroupID) {
                    $('#discussion').append('<tr><td colspan="2">' + time[0] + '</td>' +
                        
                        '<td>' + htmlEncode(name) + '</td>' +
                        '<td> ' + htmlEncode(message) + '</td>' +

                        '</tr>');
                }

                
            };


            chat.client.quartzJobExecuted = function (name, message, time, messageid) {
                // Add the message to the page.
                $('#discussion').append(htmlEncode(time) + '<li><strong>' + htmlEncode(name)
                    + '</strong>: ' + htmlEncode(message) + '</li>');
            };

            // Get the user name and store it to prepend to messages.
            $('#displayname').val("Khuluma");
            // Set initial focus to message input box.
            $('#message').focus();
            // Start the connection.
            $.connection.hub.start().done(function () {
                $('#sendmessage').click(function () {
                    // Call the Send method on the hub.
                    chat.server.send($('#displayname').val(), $('#message').val(), 1, thisgroupName, thisgroupID, false);
                    // Clear text box and reset focus for next comment.
                    $('#message').val('').focus();
                });
            });
        });
        // This optional function html-encodes messages for display in the page.
        function htmlEncode(value) {
            var encodedValue = $('<div />').text(value).html();
            return encodedValue;
        }
    </script>
}
